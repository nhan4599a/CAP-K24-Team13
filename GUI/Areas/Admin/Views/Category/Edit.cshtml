<h4 class="font-weight-bolder text-center">Edit Category</h4>
<form role="form">
    <div class="row justify-content-center">
        <div class="col-5">
            <input type="hidden" id="input-id" />
            <div class="input-group input-group-outline mb-3">
                <label class="form-label">Category name</label>
                <input class="form-control" type="text" id="input-name" />
            </div>
            @await Component.InvokeAsync("CategorySpecialDropdown")
            <div class="form-group">
                <button class="btn bg-gradient-primary-dark my-shadow text-white" id="btn-submit" type="submit">Update</button>
                <button class="btn btn-danger" style="float: right">
                    <a href="category" class="text-white">Cancel</a>
                </button>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <script src="https://cdn.tiny.cloud/1/ujug8dr0hmmvp4fgdgm2uam16w1mov8slqh4y5ld7h7hgr6p/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
    <script>
        $(function () {
            let classNames = ['active', 'bg-gradient-primary'];
            $('#nav-item-category').addClass(classNames);
            tinymce.init({
                selector: '#input-description'
            });
            loadEdittingCategory();
            $('#btn-submit').click((e) => {
                console.log('ok');
                e.preventDefault();
                e.stopPropagation();
                let id = $('#input-id').val();
                let name = $('#input-name').val();
                let special = $('#input-special').val();
                let category = {
                    categoryName: name,
                    special: special
                };
                let animationLoader = new AnimationLoader('#loading-container', '/assets/admin/img/illustrations/loading.json');
                animationLoader.showAnimation();
                editCategory(id, category, () => { 
                    animationLoader.hideAnimation();
                    window.location.href = '/admin/category';
                    window.localStorage.removeItem('editting-category');
                }, (error) => {
                    animationLoader.hideAnimation();
                    toastr.error(error, 'Error');
                });
            });
        });
        function loadEdittingCategory() {
            var edittingCategory = JSON.parse(window.localStorage.getItem('editting-category'));
            if (!edittingCategory) {
                alert("Something went wrong!");
                window.location.href = "/admin/category";
            }
            $('#input-id').val(edittingCategory.id);
            $('#input-name').val(edittingCategory.categoryName);
            $(`#input-special option[value=${edittingCategory.special}]`).attr('selected', true);
            $('.input-group-outline').addClass('is-filled');
        }
    </script>
}
